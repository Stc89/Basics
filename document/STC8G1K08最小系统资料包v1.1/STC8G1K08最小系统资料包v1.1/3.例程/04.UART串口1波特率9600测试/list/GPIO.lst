C51 COMPILER V9.00   GPIO                                                                  09/05/2016 20:31:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\list\GPIO.obj
COMPILER INVOKED BY: E:\2.DevelopSoft\Keil\C51\BIN\C51.EXE GPIO.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\GPIO.lst) OBJEC
                    -T(.\list\GPIO.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          /*************  功能说明        **************
  15          
  16          本文件为STC15xxx系列的端口初始化程序,用户几乎可以不修改这个程序.
  17          
  18          
  19          ******************************************/
  20          
  21          #include        "GPIO.h"
  22          
  23          
  24          //========================================================================
  25          // 函数: u8     GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  26          // 描述: 初始化IO口.
  27          // 参数: GPIOx: 结构参数,请参考timer.h里的定义.
  28          // 返回: 成功返回0, 空操作返回1,错误返回2.
  29          // 版本: V1.0, 2012-10-22
  30          //========================================================================
  31          u8      GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  32          {
  33   1              if(GPIO > GPIO_P5)                              return 1;       //空操作
  34   1              if(GPIOx->Mode > GPIO_OUT_PP)   return 2;       //错误
  35   1              if(GPIO == GPIO_P0)
  36   1              {
  37   2                      if(GPIOx->Mode == GPIO_PullUp)          P0M1 &= ~GPIOx->Pin,    P0M0 &= ~GPIOx->Pin;     //上拉准双向口
  38   2                      if(GPIOx->Mode == GPIO_HighZ)           P0M1 |=  GPIOx->Pin,    P0M0 &= ~GPIOx->Pin;     //浮空输入
  39   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P0M1 |=  GPIOx->Pin,    P0M0 |=  GPIOx->Pin;     //开漏输出
  40   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P0M1 &= ~GPIOx->Pin,    P0M0 |=  GPIOx->Pin;     //推挽输出
  41   2              }
  42   1              if(GPIO == GPIO_P1)
  43   1              {
  44   2                      if(GPIOx->Mode == GPIO_PullUp)          P1M1 &= ~GPIOx->Pin,    P1M0 &= ~GPIOx->Pin;     //上拉准双向口
  45   2                      if(GPIOx->Mode == GPIO_HighZ)           P1M1 |=  GPIOx->Pin,    P1M0 &= ~GPIOx->Pin;     //浮空输入
  46   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P1M1 |=  GPIOx->Pin,    P1M0 |=  GPIOx->Pin;     //开漏输出
  47   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P1M1 &= ~GPIOx->Pin,    P1M0 |=  GPIOx->Pin;     //推挽输出
  48   2              }
  49   1              if(GPIO == GPIO_P2)
  50   1              {
  51   2                      if(GPIOx->Mode == GPIO_PullUp)          P2M1 &= ~GPIOx->Pin,    P2M0 &= ~GPIOx->Pin;     //上拉准双向口
  52   2                      if(GPIOx->Mode == GPIO_HighZ)           P2M1 |=  GPIOx->Pin,    P2M0 &= ~GPIOx->Pin;     //浮空输入
  53   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P2M1 |=  GPIOx->Pin,    P2M0 |=  GPIOx->Pin;     //开漏输出
  54   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P2M1 &= ~GPIOx->Pin,    P2M0 |=  GPIOx->Pin;     //推挽输出
C51 COMPILER V9.00   GPIO                                                                  09/05/2016 20:31:13 PAGE 2   

  55   2              }
  56   1              if(GPIO == GPIO_P3)
  57   1              {
  58   2                      if(GPIOx->Mode == GPIO_PullUp)          P3M1 &= ~GPIOx->Pin,    P3M0 &= ~GPIOx->Pin;     //上拉准双向口
  59   2                      if(GPIOx->Mode == GPIO_HighZ)           P3M1 |=  GPIOx->Pin,    P3M0 &= ~GPIOx->Pin;     //浮空输入
  60   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P3M1 |=  GPIOx->Pin,    P3M0 |=  GPIOx->Pin;     //开漏输出
  61   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P3M1 &= ~GPIOx->Pin,    P3M0 |=  GPIOx->Pin;     //推挽输出
  62   2              }
  63   1              if(GPIO == GPIO_P4)
  64   1              {
  65   2                      if(GPIOx->Mode == GPIO_PullUp)          P4M1 &= ~GPIOx->Pin,    P4M0 &= ~GPIOx->Pin;     //上拉准双向口
  66   2                      if(GPIOx->Mode == GPIO_HighZ)           P4M1 |=  GPIOx->Pin,    P4M0 &= ~GPIOx->Pin;     //浮空输入
  67   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P4M1 |=  GPIOx->Pin,    P4M0 |=  GPIOx->Pin;     //开漏输出
  68   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P4M1 &= ~GPIOx->Pin,    P4M0 |=  GPIOx->Pin;     //推挽输出
  69   2              }
  70   1              if(GPIO == GPIO_P5)
  71   1              {
  72   2                      if(GPIOx->Mode == GPIO_PullUp)          P5M1 &= ~GPIOx->Pin,    P5M0 &= ~GPIOx->Pin;     //上拉准双向口
  73   2                      if(GPIOx->Mode == GPIO_HighZ)           P5M1 |=  GPIOx->Pin,    P5M0 &= ~GPIOx->Pin;     //浮空输入
  74   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P5M1 |=  GPIOx->Pin,    P5M0 |=  GPIOx->Pin;     //开漏输出
  75   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P5M1 &= ~GPIOx->Pin,    P5M0 |=  GPIOx->Pin;     //推挽输出
  76   2              }
  77   1              return 0;       //成功
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    452    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
