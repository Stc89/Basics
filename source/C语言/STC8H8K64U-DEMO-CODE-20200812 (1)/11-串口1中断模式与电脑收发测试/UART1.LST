C51 COMPILER V9.00   UART1                                                                 10/04/2020 23:14:27 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN UART1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE UART1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          /*************  功能说明    **************
  14          
  15          串口1全双工中断方式收发通讯程序。
  16          
  17          通过PC向MCU发送数据, MCU收到后通过串口1把收到的数据原样返回.
  18          
  19          下载时, 选择时钟 22.1184MHz (用户可自行修改频率).
  20          
  21          ******************************************/
  22          
  23          #include    "reg51.h"
  24          
  25          #define MAIN_Fosc       22118400L   //定义主时钟（精确计算115200波特率）
  26          
  27          
  28          typedef     unsigned char   u8;
  29          typedef     unsigned int    u16;
  30          typedef     unsigned long   u32;
  31          
  32          sfr INT_CLKO = 0x8F;
  33          sfr AUXR = 0x8E;
  34          sfr AUXR1 = 0xA2;
  35          sfr P_SW1 = 0xA2;
  36          sfr P_SW2 = 0xBA;
  37          sfr TH2  = 0xD6;
  38          sfr TL2  = 0xD7;
  39          sfr IE2   = 0xAF;
  40          
  41          sfr P4   = 0xC0;
  42          sfr P5   = 0xC8;
  43          sfr P6   = 0xE8;
  44          sfr P7   = 0xF8;
  45          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  46          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  47          sfr P0M1 = 0x93;
  48          sfr P0M0 = 0x94;
  49          sfr P2M1 = 0x95;
  50          sfr P2M0 = 0x96;
  51          sfr P3M1 = 0xB1;
  52          sfr P3M0 = 0xB2;
  53          sfr P4M1 = 0xB3;
  54          sfr P4M0 = 0xB4;
  55          sfr P5M1 = 0xC9;
C51 COMPILER V9.00   UART1                                                                 10/04/2020 23:14:27 PAGE 2   

  56          sfr P5M0 = 0xCA;
  57          sfr P6M1 = 0xCB;
  58          sfr P6M0 = 0xCC;
  59          sfr P7M1 = 0xE1;
  60          sfr P7M0 = 0xE2;
  61          
  62          sbit P00 = P0^0;
  63          sbit P01 = P0^1;
  64          sbit P02 = P0^2;
  65          sbit P03 = P0^3;
  66          sbit P04 = P0^4;
  67          sbit P05 = P0^5;
  68          sbit P06 = P0^6;
  69          sbit P07 = P0^7;
  70          sbit P10 = P1^0;
  71          sbit P11 = P1^1;
  72          sbit P12 = P1^2;
  73          sbit P13 = P1^3;
  74          sbit P14 = P1^4;
  75          sbit P15 = P1^5;
  76          sbit P16 = P1^6;
  77          sbit P17 = P1^7;
  78          sbit P20 = P2^0;
  79          sbit P21 = P2^1;
  80          sbit P22 = P2^2;
  81          sbit P23 = P2^3;
  82          sbit P24 = P2^4;
  83          sbit P25 = P2^5;
  84          sbit P26 = P2^6;
  85          sbit P27 = P2^7;
  86          sbit P30 = P3^0;
  87          sbit P31 = P3^1;
  88          sbit P32 = P3^2;
  89          sbit P33 = P3^3;
  90          sbit P34 = P3^4;
  91          sbit P35 = P3^5;
  92          sbit P36 = P3^6;
  93          sbit P37 = P3^7;
  94          sbit P40 = P4^0;
  95          sbit P41 = P4^1;
  96          sbit P42 = P4^2;
  97          sbit P43 = P4^3;
  98          sbit P44 = P4^4;
  99          sbit P45 = P4^5;
 100          sbit P46 = P4^6;
 101          sbit P47 = P4^7;
 102          sbit P50 = P5^0;
 103          sbit P51 = P5^1;
 104          sbit P52 = P5^2;
 105          sbit P53 = P5^3;
 106          sbit P54 = P5^4;
 107          sbit P55 = P5^5;
 108          sbit P56 = P5^6;
 109          sbit P57 = P5^7;
 110          
 111          
 112          #define     Baudrate1           115200L
 113          #define     UART1_BUF_LENGTH    64
 114          
 115          
 116          u8  TX1_Cnt;    //发送计数
 117          u8  RX1_Cnt;    //接收计数
C51 COMPILER V9.00   UART1                                                                 10/04/2020 23:14:27 PAGE 3   

 118          bit B_TX1_Busy; //发送忙标志
 119          
 120          u8  idata RX1_Buffer[UART1_BUF_LENGTH]; //接收缓冲
 121          
 122          
 123          void    UART1_config(u8 brt);   // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 124          void    PrintString1(u8 *puts);
 125          
 126          
 127          //========================================================================
 128          // 函数: void main(void)
 129          // 描述: 主函数。
 130          // 参数: none.
 131          // 返回: none.
 132          // 版本: VER1.0
 133          // 日期: 2014-11-28
 134          // 备注: 
 135          //========================================================================
 136          void main(void)
 137          {
 138   1          P0M1 = 0;   P0M0 = 0;   //设置为准双向口
 139   1          P1M1 = 0;   P1M0 = 0;   //设置为准双向口
 140   1          P2M1 = 0;   P2M0 = 0;   //设置为准双向口
 141   1          P3M1 = 0;   P3M0 = 0;   //设置为准双向口
 142   1          P4M1 = 0;   P4M0 = 0;   //设置为准双向口
 143   1          P5M1 = 0;   P5M0 = 0;   //设置为准双向口
 144   1          P6M1 = 0;   P6M0 = 0;   //设置为准双向口
 145   1          P7M1 = 0;   P7M0 = 0;   //设置为准双向口
 146   1      
 147   1          UART1_config(1);    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 148   1          EA = 1; //允许总中断
 149   1      
 150   1          PrintString1("STC8H8K64U UART1 Test Programme!\r\n");  //UART1发送一个字符串
 151   1      
 152   1          while (1)
 153   1          {
 154   2              if((TX1_Cnt != RX1_Cnt) && (!B_TX1_Busy))   //收到数据, 发送空闲
 155   2              {
 156   3                  SBUF = RX1_Buffer[TX1_Cnt];     //把收到的数据远样返回
 157   3                  B_TX1_Busy = 1;
 158   3                  if(++TX1_Cnt >= UART1_BUF_LENGTH)   TX1_Cnt = 0;
 159   3              }
 160   2          }
 161   1      }
 162          
 163          
 164          //========================================================================
 165          // 函数: void PrintString1(u8 *puts)
 166          // 描述: 串口1发送字符串函数。
 167          // 参数: puts:  字符串指针.
 168          // 返回: none.
 169          // 版本: VER1.0
 170          // 日期: 2014-11-28
 171          // 备注: 
 172          //========================================================================
 173          void PrintString1(u8 *puts) //发送一个字符串
 174          {
 175   1          for (; *puts != 0;  puts++)     //遇到停止符0结束
 176   1          {
 177   2              SBUF = *puts;
 178   2              B_TX1_Busy = 1;
 179   2              while(B_TX1_Busy);
C51 COMPILER V9.00   UART1                                                                 10/04/2020 23:14:27 PAGE 4   

 180   2          }
 181   1      }
 182          
 183          //========================================================================
 184          // 函数: SetTimer2Baudraye(u16 dat)
 185          // 描述: 设置Timer2做波特率发生器。
 186          // 参数: dat: Timer2的重装值.
 187          // 返回: none.
 188          // 版本: VER1.0
 189          // 日期: 2014-11-28
 190          // 备注: 
 191          //========================================================================
 192          void    SetTimer2Baudraye(u16 dat)  // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 193          {
 194   1          AUXR &= ~(1<<4);    //Timer stop
 195   1          AUXR &= ~(1<<3);    //Timer2 set As Timer
 196   1          AUXR |=  (1<<2);    //Timer2 set as 1T mode
 197   1          TH2 = dat / 256;
 198   1          TL2 = dat % 256;
 199   1          IE2  &= ~(1<<2);    //禁止中断
 200   1          AUXR |=  (1<<4);    //Timer run enable
 201   1      }
 202          
 203          //========================================================================
 204          // 函数: void   UART1_config(u8 brt)
 205          // 描述: UART1初始化函数。
 206          // 参数: brt: 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 207          // 返回: none.
 208          // 版本: VER1.0
 209          // 日期: 2014-11-28
 210          // 备注: 
 211          //========================================================================
 212          void    UART1_config(u8 brt)    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 213          {
 214   1          /*********** 波特率使用定时器2 *****************/
 215   1          if(brt == 2)
 216   1          {
 217   2              AUXR |= 0x01;       //S1 BRT Use Timer2;
 218   2              SetTimer2Baudraye(65536UL - (MAIN_Fosc / 4) / Baudrate1);
 219   2          }
 220   1      
 221   1          /*********** 波特率使用定时器1 *****************/
 222   1          else
 223   1          {
 224   2              TR1 = 0;
 225   2              AUXR &= ~0x01;      //S1 BRT Use Timer1;
 226   2              AUXR |=  (1<<6);    //Timer1 set as 1T mode
 227   2              TMOD &= ~(1<<6);    //Timer1 set As Timer
 228   2              TMOD &= ~0x30;      //Timer1_16bitAutoReload;
 229   2              TH1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) / 256);
 230   2              TL1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) % 256);
 231   2              ET1 = 0;    //禁止中断
 232   2              INT_CLKO &= ~0x02;  //不输出时钟
 233   2              TR1  = 1;
 234   2          }
 235   1          /*************************************************/
 236   1      
 237   1          SCON = (SCON & 0x3f) | 0x40;    //UART1模式, 0x00: 同步移位输出, 0x40: 8位数据,可变波特率, 0x80: 9位数
             -据,固定波特率, 0xc0: 9位数据,可变波特率
 238   1      //  PS  = 1;    //高优先级中断
 239   1          ES  = 1;    //允许中断
 240   1          REN = 1;    //允许接收
C51 COMPILER V9.00   UART1                                                                 10/04/2020 23:14:27 PAGE 5   

 241   1          P_SW1 &= 0x3f;
 242   1          P_SW1 |= 0x00;      //UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 0x80: P1.6 P1.7 (必须使用内部
             -时钟)
 243   1      //  PCON2 |=  (1<<4);   //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
 244   1      
 245   1          B_TX1_Busy = 0;
 246   1          TX1_Cnt = 0;
 247   1          RX1_Cnt = 0;
 248   1      }
 249          
 250          
 251          //========================================================================
 252          // 函数: void UART1_int (void) interrupt UART1_VECTOR
 253          // 描述: UART1中断函数。
 254          // 参数: nine.
 255          // 返回: none.
 256          // 版本: VER1.0
 257          // 日期: 2014-11-28
 258          // 备注: 
 259          //========================================================================
 260          void UART1_int (void) interrupt 4
 261          {
 262   1          if(RI)
 263   1          {
 264   2              RI = 0;
 265   2              RX1_Buffer[RX1_Cnt] = SBUF;
 266   2              if(++RX1_Cnt >= UART1_BUF_LENGTH)   RX1_Cnt = 0;    //防溢出
 267   2          }
 268   1      
 269   1          if(TI)
 270   1          {
 271   2              TI = 0;
 272   2              B_TX1_Busy = 0;
 273   2          }
 274   1      }
 275          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =     64    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
