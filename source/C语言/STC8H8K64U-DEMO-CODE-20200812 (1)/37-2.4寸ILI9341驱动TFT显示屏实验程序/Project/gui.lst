C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN ..\obj\gui.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\GUI\gui.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\font;..\GUI;..\LCD
                    -;..\sys;..\touch;..\USER) DEBUG OBJECTEXTEND PRINT(.\gui.lst) TABS(2) OBJECT(..\obj\gui.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 液晶屏驱动程序参考wiki技术网站提供的开源源码，仅供学习使用          */
  11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  12          /*---------------------------------------------------------------------*/
  13          
  14          //=========================================电源接线================================================//
  15          //VDD接DC 3.3V电源
  16          //GND接地
  17          //=======================================液晶屏数据线接线==========================================//
  18          //本模块数据总线类型为8位并口
  19          //液晶屏模块             STC8H8K64U
  20          // LCD_D0~D7     接       P00~P07        //液晶屏8位数据线
  21          //=======================================液晶屏控制线接线==========================================//
  22          //液晶屏模块             STC8H8K64U
  23          // LCD_RS        接        P45           //数据/命令选择控制信号
  24          // LCD_RD        接        P44           //读控制信号
  25          // LCD_RST       接        P43           //复位信号
  26          // LCD_WR        接        P42           //写控制信号
  27          // LCD_CS        接        P34           //片选控制信号
  28          //**************************************************************************************************/ 
  29          #include "lcd.h"
  30          #include "font.h" 
  31          #include "sys.h"
  32          #include "gui.h"
  33          #include "string.h"
  34          
  35          /*******************************************************************
  36           * @name       :void GUI_DrawPoint(u16 x,u16 y,u16 color)
  37           * @date       :2018-08-09 
  38           * @function   :draw a point in LCD screen
  39           * @parameters :x:the x coordinate of the point
  40                          y:the y coordinate of the point
  41                          color:the color value of the point
  42           * @retvalue   :None
  43          ********************************************************************/
  44          
  45          void GUI_DrawPoint(u16 x,u16 y,u16 color)
  46          {
  47   1        LCD_SetCursor(x,y);//设置光标位置 
  48   1        LCD_WR_DATA_16Bit(color); 
  49   1      }
  50          
  51          /*******************************************************************
  52           * @name       :void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
  53           * @date       :2018-08-09 
  54           * @function   :fill the specified area
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 2   

  55           * @parameters :sx:the beginning x coordinate of the specified area
  56                          sy:the beginning y coordinate of the specified area
  57                          ex:the ending x coordinate of the specified area
  58                          ey:the ending y coordinate of the specified area
  59                          color:the filled color value
  60           * @retvalue   :None
  61          ********************************************************************/
  62          void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
  63          {   
  64   1        u16 i,j;      
  65   1        u16 width=ex-sx+1;    //得到填充的宽度
  66   1        u16 height=ey-sy+1;   //高度
  67   1        LCD_SetWindows(sx,sy,ex,ey);//设置显示窗口
  68   1        for(i=0;i<height;i++)
  69   1        {
  70   2          for(j=0;j<width;j++)
  71   2          LCD_WR_DATA_16Bit(color); //写入数据   
  72   2        }
  73   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口设置为全屏
  74   1      }
  75          
  76          /*******************************************************************
  77           * @name       :void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
  78           * @date       :2018-08-09 
  79           * @function   :Draw a line between two points
  80           * @parameters :x1:the beginning x coordinate of the line
  81                          y1:the beginning y coordinate of the line
  82                          x2:the ending x coordinate of the line
  83                          y2:the ending y coordinate of the line
  84           * @retvalue   :None
  85          ********************************************************************/
  86          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
  87          {
  88   1        u16 t; 
  89   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
  90   1        int incx,incy,uRow,uCol; 
  91   1      
  92   1        delta_x=x2-x1; //计算坐标增量 
  93   1        delta_y=y2-y1; 
  94   1        uRow=x1; 
  95   1        uCol=y1; 
  96   1        if(delta_x>0)incx=1; //设置单步方向 
  97   1        else if(delta_x==0)incx=0;//垂直线 
  98   1        else {incx=-1;delta_x=-delta_x;} 
  99   1        if(delta_y>0)incy=1; 
 100   1        else if(delta_y==0)incy=0;//水平线 
 101   1        else{incy=-1;delta_y=-delta_y;} 
 102   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 103   1        else distance=delta_y; 
 104   1        for(t=0;t<=distance+1;t++ )//画线输出 
 105   1        {  
 106   2          LCD_DrawPoint(uRow,uCol);//画点 
 107   2          xerr+=delta_x ; 
 108   2          yerr+=delta_y ; 
 109   2          if(xerr>distance) 
 110   2          { 
 111   3            xerr-=distance; 
 112   3            uRow+=incx; 
 113   3          } 
 114   2          if(yerr>distance) 
 115   2          { 
 116   3            yerr-=distance; 
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 3   

 117   3            uCol+=incy; 
 118   3          } 
 119   2        }  
 120   1      } 
 121          
 122          /*****************************************************************************
 123           * @name       :void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 124           * @date       :2018-08-09 
 125           * @function   :Draw a rectangle
 126           * @parameters :x1:the beginning x coordinate of the rectangle
 127                          y1:the beginning y coordinate of the rectangle
 128                          x2:the ending x coordinate of the rectangle
 129                          y2:the ending y coordinate of the rectangle
 130           * @retvalue   :None
 131          ******************************************************************************/
 132          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 133          {
 134   1        LCD_DrawLine(x1,y1,x2,y1);
 135   1        LCD_DrawLine(x1,y1,x1,y2);
 136   1        LCD_DrawLine(x1,y2,x2,y2);
 137   1        LCD_DrawLine(x2,y1,x2,y2);
 138   1      }  
 139          
 140          /*****************************************************************************
 141           * @name       :void LCD_DrawFillRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 142           * @date       :2018-08-09 
 143           * @function   :Filled a rectangle
 144           * @parameters :x1:the beginning x coordinate of the filled rectangle
 145                          y1:the beginning y coordinate of the filled rectangle
 146                          x2:the ending x coordinate of the filled rectangle
 147                          y2:the ending y coordinate of the filled rectangle
 148           * @retvalue   :None
 149          ******************************************************************************/  
 150          void LCD_DrawFillRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 151          {
 152   1        LCD_Fill(x1,y1,x2,y2,POINT_COLOR);
 153   1      
 154   1      }
 155           
 156          /*****************************************************************************
 157           * @name       :void _draw_circle_8(int xc, int yc, int x, int y, u16 c)
 158           * @date       :2018-08-09 
 159           * @function   :8 symmetry circle drawing algorithm (internal call)
 160           * @parameters :xc:the x coordinate of the Circular center 
 161                          yc:the y coordinate of the Circular center 
 162                          x:the x coordinate relative to the Circular center 
 163                          y:the y coordinate relative to the Circular center 
 164                          c:the color value of the circle
 165           * @retvalue   :None
 166          ******************************************************************************/  
 167          void _draw_circle_8(int xc, int yc, int x, int y, u16 c)
 168          {
 169   1        GUI_DrawPoint(xc + x, yc + y, c);
 170   1      
 171   1        GUI_DrawPoint(xc - x, yc + y, c);
 172   1      
 173   1        GUI_DrawPoint(xc + x, yc - y, c);
 174   1      
 175   1        GUI_DrawPoint(xc - x, yc - y, c);
 176   1      
 177   1        GUI_DrawPoint(xc + y, yc + x, c);
 178   1      
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 4   

 179   1        GUI_DrawPoint(xc - y, yc + x, c);
 180   1      
 181   1        GUI_DrawPoint(xc + y, yc - x, c);
 182   1      
 183   1        GUI_DrawPoint(xc - y, yc - x, c);
 184   1      }
 185          
 186          /*****************************************************************************
 187           * @name       :void gui_circle(int xc, int yc,u16 c,int r, int fill)
 188           * @date       :2018-08-09 
 189           * @function   :Draw a circle of specified size at a specified location
 190           * @parameters :xc:the x coordinate of the Circular center 
 191                          yc:the y coordinate of the Circular center 
 192                          r:Circular radius
 193                          fill:1-filling,0-no filling
 194           * @retvalue   :None
 195          ******************************************************************************/  
 196          void gui_circle(int xc, int yc,u16 c,int r, int fill)
 197          {
 198   1        int x = 0, y = r, yi, d;
 199   1      
 200   1        d = 3 - 2 * r;
 201   1      
 202   1      
 203   1        if (fill) 
 204   1        {
 205   2          // 如果填充（画实心圆）
 206   2          while (x <= y) {
 207   3            for (yi = x; yi <= y; yi++)
 208   3              _draw_circle_8(xc, yc, x, yi, c);
 209   3      
 210   3            if (d < 0) {
 211   4              d = d + 4 * x + 6;
 212   4            } else {
 213   4              d = d + 4 * (x - y) + 10;
 214   4              y--;
 215   4            }
 216   3            x++;
 217   3          }
 218   2        } else 
 219   1        {
 220   2          // 如果不填充（画空心圆）
 221   2          while (x <= y) {
 222   3            _draw_circle_8(xc, yc, x, y, c);
 223   3            if (d < 0) {
 224   4              d = d + 4 * x + 6;
 225   4            } else {
 226   4              d = d + 4 * (x - y) + 10;
 227   4              y--;
 228   4            }
 229   3            x++;
 230   3          }
 231   2        }
 232   1      }
 233          
 234          /*****************************************************************************
 235           * @name       :void Draw_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 236           * @date       :2018-08-09 
 237           * @function   :Draw a triangle at a specified position
 238           * @parameters :x0:the beginning x coordinate of the triangular edge 
 239                          y0:the beginning y coordinate of the triangular edge 
 240                          x1:the vertex x coordinate of the triangular
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 5   

 241                          y1:the vertex y coordinate of the triangular
 242                          x2:the ending x coordinate of the triangular edge 
 243                          y2:the ending y coordinate of the triangular edge 
 244           * @retvalue   :None
 245          ******************************************************************************/ 
 246          void Draw_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 247          {
 248   1        LCD_DrawLine(x0,y0,x1,y1);
 249   1        LCD_DrawLine(x1,y1,x2,y2);
 250   1        LCD_DrawLine(x2,y2,x0,y0);
 251   1      }
 252          
 253          static void _swap(u16 *a, u16 *b)
 254          {
 255   1        u16 tmp;
 256   1        tmp = *a;
 257   1        *a = *b;
 258   1        *b = tmp;
 259   1      }
 260          
 261          /*****************************************************************************
 262           * @name       :void Fill_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 263           * @date       :2018-08-09 
 264           * @function   :filling a triangle at a specified position
 265           * @parameters :x0:the beginning x coordinate of the triangular edge 
 266                          y0:the beginning y coordinate of the triangular edge 
 267                          x1:the vertex x coordinate of the triangular
 268                          y1:the vertex y coordinate of the triangular
 269                          x2:the ending x coordinate of the triangular edge 
 270                          y2:the ending y coordinate of the triangular edge 
 271           * @retvalue   :None
 272          ******************************************************************************/ 
 273          void Fill_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 274          {
 275   1        u16 a, b, y, last;
 276   1        int dx01, dy01, dx02, dy02, dx12, dy12;
 277   1        long sa = 0;
 278   1        long sb = 0;
 279   1        if (y0 > y1) 
 280   1        {
 281   2          _swap(&y0,&y1); 
 282   2          _swap(&x0,&x1);
 283   2        }
 284   1        if (y1 > y2) 
 285   1        {
 286   2          _swap(&y2,&y1); 
 287   2          _swap(&x2,&x1);
 288   2        }
 289   1        if (y0 > y1) 
 290   1        {
 291   2          _swap(&y0,&y1); 
 292   2          _swap(&x0,&x1);
 293   2        }
 294   1        if(y0 == y2) 
 295   1        { 
 296   2          a = b = x0;
 297   2          if(x1 < a)
 298   2          {
 299   3            a = x1;
 300   3          }
 301   2          else if(x1 > b)
 302   2          {
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 6   

 303   3            b = x1;
 304   3          }
 305   2          if(x2 < a)
 306   2          {
 307   3            a = x2;
 308   3          }
 309   2          else if(x2 > b)
 310   2          {
 311   3            b = x2;
 312   3          }
 313   2          LCD_Fill(a,y0,b,y0,POINT_COLOR);
 314   2          return;
 315   2        }
 316   1        dx01 = x1 - x0;
 317   1        dy01 = y1 - y0;
 318   1        dx02 = x2 - x0;
 319   1        dy02 = y2 - y0;
 320   1        dx12 = x2 - x1;
 321   1        dy12 = y2 - y1;
 322   1        
 323   1        if(y1 == y2)
 324   1        {
 325   2          last = y1; 
 326   2        }
 327   1        else
 328   1        {
 329   2          last = y1-1; 
 330   2        }
 331   1        for(y=y0; y<=last; y++) 
 332   1        {
 333   2          a = x0 + sa / dy01;
 334   2          b = x0 + sb / dy02;
 335   2          sa += dx01;
 336   2          sb += dx02;
 337   2          if(a > b)
 338   2          {
 339   3            _swap(&a,&b);
 340   3          }
 341   2          LCD_Fill(a,y,b,y,POINT_COLOR);
 342   2        }
 343   1        sa = dx12 * (y - y1);
 344   1        sb = dx02 * (y - y0);
 345   1        for(; y<=y2; y++) 
 346   1        {
 347   2          a = x1 + sa / dy12;
 348   2          b = x0 + sb / dy02;
 349   2          sa += dx12;
 350   2          sb += dx02;
 351   2          if(a > b)
 352   2          {
 353   3            _swap(&a,&b);
 354   3          }
 355   2          LCD_Fill(a,y,b,y,POINT_COLOR);
 356   2        }
 357   1      }
 358          
 359          /*****************************************************************************
 360           * @name       :void LCD_ShowChar(u16 x,u16 y,u16 fc, u16 bc, u8 num,u8 size,u8 mode)
 361           * @date       :2018-08-09 
 362           * @function   :Display a single English character
 363           * @parameters :x:the beginning x coordinate of the Character display position
 364                          y:the beginning y coordinate of the Character display position
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 7   

 365                          fc:the color value of display character
 366                          bc:the background color of display character
 367                          num:the ascii code of display character(0~94)
 368                          size:the size of display character
 369                          mode:0-no overlying,1-overlying
 370           * @retvalue   :None
 371          ******************************************************************************/ 
 372          void LCD_ShowChar(u16 x,u16 y,u16 fc, u16 bc, u8 num,u8 size,u8 mode)
 373          {  
 374   1        u8 temp;
 375   1        u8 pos,t;
 376   1        u16 colortemp=POINT_COLOR;      
 377   1      
 378   1        num=num-' ';//得到偏移后的值
 379   1        LCD_SetWindows(x,y,x+size/2-1,y+size-1);//设置单个文字显示窗口
 380   1        if(!mode) //非叠加方式
 381   1        {
 382   2          for(pos=0;pos<size;pos++)
 383   2          {
 384   3            if(size==12)temp=asc2_1206[num][pos];//调用1206字体
 385   3            else temp=asc2_1608[num][pos];     //调用1608字体
 386   3            for(t=0;t<size/2;t++)
 387   3              {                 
 388   4                  if(temp&0x01)LCD_WR_DATA_16Bit(fc); 
 389   4              else LCD_WR_DATA_16Bit(bc); 
 390   4              temp>>=1; 
 391   4              
 392   4              }
 393   3          } 
 394   2        }else//叠加方式
 395   1        {
 396   2          for(pos=0;pos<size;pos++)
 397   2          {
 398   3            if(size==12)temp=asc2_1206[num][pos];//调用1206字体
 399   3            else temp=asc2_1608[num][pos];     //调用1608字体
 400   3            for(t=0;t<size/2;t++)
 401   3              {   
 402   4              POINT_COLOR=fc;              
 403   4                  if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点    
 404   4                  temp>>=1; 
 405   4              }
 406   3          }
 407   2        }
 408   1        POINT_COLOR=colortemp;  
 409   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏             
 410   1      }
 411          
 412          /*****************************************************************************
 413           * @name       :void LCD_ShowString(u16 x,u16 y,u8 size,u8 *p,u8 mode)
 414           * @date       :2018-08-09 
 415           * @function   :Display English string
 416           * @parameters :x:the beginning x coordinate of the English string
 417                          y:the beginning y coordinate of the English string
 418                          p:the start address of the English string
 419                          size:the size of display character
 420                          mode:0-no overlying,1-overlying
 421           * @retvalue   :None
 422          ******************************************************************************/       
 423          void LCD_ShowString(u16 x,u16 y,u8 size,u8 *p,u8 mode)
 424          {         
 425   1          while((*p<='~')&&(*p>=' '))//判断是不是非法字符!
 426   1          {   
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 8   

 427   2          if(x>(lcddev.width-1)||y>(lcddev.height-1)) 
 428   2          return;     
 429   2              LCD_ShowChar(x,y,POINT_COLOR,BACK_COLOR,*p,size,mode);
 430   2              x+=size/2;
 431   2              p++;
 432   2          }  
 433   1      } 
 434          
 435          /*****************************************************************************
 436           * @name       :u32 mypow(u8 m,u8 n)
 437           * @date       :2018-08-09 
 438           * @function   :get the nth power of m (internal call)
 439           * @parameters :m:the multiplier
 440                          n:the power
 441           * @retvalue   :the nth power of m
 442          ******************************************************************************/ 
 443          u32 mypow(u8 m,u8 n)
 444          {
 445   1        u32 result=1;  
 446   1        while(n--)result*=m;    
 447   1        return result;
 448   1      }
 449          
 450          /*****************************************************************************
 451           * @name       :void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size)
 452           * @date       :2018-08-09 
 453           * @function   :Display number
 454           * @parameters :x:the beginning x coordinate of the number
 455                          y:the beginning y coordinate of the number
 456                          num:the number(0~4294967295)
 457                          len:the length of the display number
 458                          size:the size of display number
 459           * @retvalue   :None
 460          ******************************************************************************/        
 461          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size)
 462          {           
 463   1        u8 t,temp;
 464   1        u8 enshow=0;               
 465   1        for(t=0;t<len;t++)
 466   1        {
 467   2          temp=(num/mypow(10,len-t-1))%10;
 468   2          if(enshow==0&&t<(len-1))
 469   2          {
 470   3            if(temp==0)
 471   3            {
 472   4              LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,' ',size,0);
 473   4              continue;
 474   4            }else enshow=1; 
 475   3             
 476   3          }
 477   2          LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,temp+'0',size,0); 
 478   2        }
 479   1      } 
 480          
 481          /*****************************************************************************
 482           * @name       :void GUI_DrawFont16(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 483           * @date       :2018-08-09 
 484           * @function   :Display a single 16x16 Chinese character
 485           * @parameters :x:the beginning x coordinate of the Chinese character
 486                          y:the beginning y coordinate of the Chinese character
 487                          fc:the color value of Chinese character
 488                          bc:the background color of Chinese character
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 9   

 489                          s:the start address of the Chinese character
 490                          mode:0-no overlying,1-overlying
 491           * @retvalue   :None
 492          ******************************************************************************/ 
 493          void GUI_DrawFont16(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 494          {
 495   1        u8 i,j;
 496   1        u16 k;
 497   1        u16 HZnum;
 498   1        u16 x0=x;
 499   1        HZnum=sizeof(tfont16)/sizeof(typFNT_GB16);  //自动统计汉字数目
 500   1        
 501   1            
 502   1        for (k=0;k<HZnum;k++) 
 503   1        {
 504   2          if ((tfont16[k].Index[0]==*(s))&&(tfont16[k].Index[1]==*(s+1)))
 505   2          {   LCD_SetWindows(x,y,x+16-1,y+16-1);
 506   3              for(i=0;i<16*2;i++)
 507   3              {
 508   4              for(j=0;j<8;j++)
 509   4                { 
 510   5                if(!mode) //非叠加方式
 511   5                {
 512   6                  if(tfont16[k].Msk[i]&(0x80>>j)) LCD_WR_DATA_16Bit(fc);
 513   6                  else LCD_WR_DATA_16Bit(bc);
 514   6                }
 515   5                else
 516   5                {
 517   6                  POINT_COLOR=fc;
 518   6                  if(tfont16[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 519   6                  x++;
 520   6                  if((x-x0)==16)
 521   6                  {
 522   7                    x=x0;
 523   7                    y++;
 524   7                    break;
 525   7                  }
 526   6                }
 527   5      
 528   5              }
 529   4              
 530   4            }
 531   3            
 532   3            
 533   3          }           
 534   2          continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 535   2        }
 536   1      
 537   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 538   1      } 
 539          
 540          /*****************************************************************************
 541           * @name       :void GUI_DrawFont24(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 542           * @date       :2018-08-09 
 543           * @function   :Display a single 24x24 Chinese character
 544           * @parameters :x:the beginning x coordinate of the Chinese character
 545                          y:the beginning y coordinate of the Chinese character
 546                          fc:the color value of Chinese character
 547                          bc:the background color of Chinese character
 548                          s:the start address of the Chinese character
 549                          mode:0-no overlying,1-overlying
 550           * @retvalue   :None
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 10  

 551          ******************************************************************************/ 
 552          void GUI_DrawFont24(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 553          {
 554   1        u8 i,j;
 555   1        u16 k;
 556   1        u16 HZnum;
 557   1        u16 x0=x;
 558   1        HZnum=sizeof(tfont24)/sizeof(typFNT_GB24);  //自动统计汉字数目
 559   1          
 560   1            for (k=0;k<HZnum;k++) 
 561   1            {
 562   2              if ((tfont24[k].Index[0]==*(s))&&(tfont24[k].Index[1]==*(s+1)))
 563   2              {   LCD_SetWindows(x,y,x+24-1,y+24-1);
 564   3                  for(i=0;i<24*3;i++)
 565   3                  {
 566   4                    for(j=0;j<8;j++)
 567   4                    {
 568   5                      if(!mode) //非叠加方式
 569   5                      {
 570   6                        if(tfont24[k].Msk[i]&(0x80>>j)) LCD_WR_DATA_16Bit(fc);
 571   6                        else LCD_WR_DATA_16Bit(bc);
 572   6                      }
 573   5                    else
 574   5                    {
 575   6                      POINT_COLOR=fc;
 576   6                      if(tfont24[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 577   6                      x++;
 578   6                      if((x-x0)==24)
 579   6                      {
 580   7                        x=x0;
 581   7                        y++;
 582   7                        break;
 583   7                      }
 584   6                    }
 585   5                  }
 586   4                }
 587   3                
 588   3                
 589   3              }           
 590   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 591   2            }
 592   1      
 593   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 594   1      }
 595          
 596          /*****************************************************************************
 597           * @name       :void GUI_DrawFont32(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 598           * @date       :2018-08-09 
 599           * @function   :Display a single 32x32 Chinese character
 600           * @parameters :x:the beginning x coordinate of the Chinese character
 601                          y:the beginning y coordinate of the Chinese character
 602                          fc:the color value of Chinese character
 603                          bc:the background color of Chinese character
 604                          s:the start address of the Chinese character
 605                          mode:0-no overlying,1-overlying
 606           * @retvalue   :None
 607          ******************************************************************************/ 
 608          void GUI_DrawFont32(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 609          {
 610   1        u8 i,j;
 611   1        u16 k;
 612   1        u16 HZnum;
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 11  

 613   1        u16 x0=x;
 614   1        HZnum=sizeof(tfont32)/sizeof(typFNT_GB32);  //自动统计汉字数目
 615   1        for (k=0;k<HZnum;k++) 
 616   1            {
 617   2              if ((tfont32[k].Index[0]==*(s))&&(tfont32[k].Index[1]==*(s+1)))
 618   2              {   LCD_SetWindows(x,y,x+32-1,y+32-1);
 619   3                  for(i=0;i<32*4;i++)
 620   3                  {
 621   4                  for(j=0;j<8;j++)
 622   4                    {
 623   5                    if(!mode) //非叠加方式
 624   5                    {
 625   6                      if(tfont32[k].Msk[i]&(0x80>>j)) LCD_WR_DATA_16Bit(fc);
 626   6                      else LCD_WR_DATA_16Bit(bc);
 627   6                    }
 628   5                    else
 629   5                    {
 630   6                      POINT_COLOR=fc;
 631   6                      if(tfont32[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 632   6                      x++;
 633   6                      if((x-x0)==32)
 634   6                      {
 635   7                        x=x0;
 636   7                        y++;
 637   7                        break;
 638   7                      }
 639   6                    }
 640   5                  }
 641   4                }
 642   3                
 643   3                
 644   3              }           
 645   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 646   2            }
 647   1        
 648   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 649   1      } 
 650          
 651          /*****************************************************************************
 652           * @name       :void Show_Str(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 653           * @date       :2018-08-09 
 654           * @function   :Display Chinese and English strings
 655           * @parameters :x:the beginning x coordinate of the Chinese and English strings
 656                          y:the beginning y coordinate of the Chinese and English strings
 657                          fc:the color value of Chinese and English strings
 658                          bc:the background color of Chinese and English strings
 659                          str:the start address of the Chinese and English strings
 660                          size:the size of Chinese and English strings
 661                          mode:0-no overlying,1-overlying
 662           * @retvalue   :None
 663          ******************************************************************************/          
 664          void Show_Str(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 665          {         
 666   1        u16 x0=x;                   
 667   1          u8 bHz=0;     //字符或者中文 
 668   1          while(*str!=0)//数据未结束
 669   1          { 
 670   2              if(!bHz)
 671   2              {
 672   3            if(x>(lcddev.width-size/2)||y>(lcddev.height-size)) 
 673   3            return; 
 674   3                if(*str>0x80)bHz=1;//中文 
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 12  

 675   3                else              //字符
 676   3                {          
 677   4                  if(*str==0x0D)//换行符号
 678   4                  {         
 679   5                      y+=size;
 680   5                      x=x0;
 681   5                      str++; 
 682   5                  }  
 683   4                  else
 684   4              {
 685   5                if(size>16)//字库中没有集成12X24 16X32的英文字体,用8X16代替
 686   5                {  
 687   6                LCD_ShowChar(x,y,fc,bc,*str,16,mode);
 688   6                x+=8; //字符,为全字的一半 
 689   6                }
 690   5                else
 691   5                {
 692   6                LCD_ShowChar(x,y,fc,bc,*str,size,mode);
 693   6                x+=size/2; //字符,为全字的一半 
 694   6                }
 695   5              } 
 696   4              str++; 
 697   4                  
 698   4                }
 699   3              }else//中文 
 700   2              {   
 701   3            if(x>(lcddev.width-size)||y>(lcddev.height-size)) 
 702   3            return;  
 703   3                  bHz=0;//有汉字库    
 704   3            if(size==32)
 705   3            GUI_DrawFont32(x,y,fc,bc,str,mode);   
 706   3            else if(size==24)
 707   3            GUI_DrawFont24(x,y,fc,bc,str,mode); 
 708   3            else
 709   3            GUI_DrawFont16(x,y,fc,bc,str,mode);
 710   3              
 711   3                str+=2; 
 712   3                x+=size;//下一个汉字偏移      
 713   3              }            
 714   2          }   
 715   1      }
 716          
 717          /*****************************************************************************
 718           * @name       :void Gui_StrCenter(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 719           * @date       :2018-08-09 
 720           * @function   :Centered display of English and Chinese strings
 721           * @parameters :x:the beginning x coordinate of the Chinese and English strings
 722                          y:the beginning y coordinate of the Chinese and English strings
 723                          fc:the color value of Chinese and English strings
 724                          bc:the background color of Chinese and English strings
 725                          str:the start address of the Chinese and English strings
 726                          size:the size of Chinese and English strings
 727                          mode:0-no overlying,1-overlying
 728           * @retvalue   :None
 729          ******************************************************************************/ 
 730          void Gui_StrCenter(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 731          {
 732   1        u16 len=strlen((const char *)str);
 733   1        u16 x1=(lcddev.width-len*8)/2;
 734   1        Show_Str(x+x1,y,fc,bc,str,size,mode);
 735   1      } 
 736           
C51 COMPILER V9.59.0.0   GUI                                                               07/09/2020 18:17:23 PAGE 13  

 737          /*****************************************************************************
 738           * @name       :void Gui_Drawbmp16(u16 x,u16 y,const unsigned char *p)
 739           * @date       :2018-08-09 
 740           * @function   :Display a 16-bit BMP image
 741           * @parameters :x:the beginning x coordinate of the BMP image
 742                          y:the beginning y coordinate of the BMP image
 743                          p:the start address of image array
 744           * @retvalue   :None
 745          ******************************************************************************/ 
 746          void Gui_Drawbmp16(u16 x,u16 y,const unsigned char *p) //显示40*40 QQ图片
 747          {
 748   1          int i; 
 749   1        unsigned char picH,picL; 
 750   1        LCD_SetWindows(x,y,x+40-1,y+40-1);//窗口设置
 751   1          for(i=0;i<40*40;i++)
 752   1        { 
 753   2          picL=*(p+i*2);  //数据低位在前
 754   2          picH=*(p+i*2+1);        
 755   2          LCD_WR_DATA_16Bit(picH<<8|picL);              
 756   2        } 
 757   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复显示窗口为全屏 
 758   1      
 759   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   7216    ----
   CONSTANT SIZE    =   5636    ----
   XDATA SIZE       =   ----     294
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
