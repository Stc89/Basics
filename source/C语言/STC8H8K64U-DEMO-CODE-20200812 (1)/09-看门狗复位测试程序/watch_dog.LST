C51 COMPILER V9.59.0.0   WATCH_DOG                                                         06/12/2020 16:34:25 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE WATCH_DOG
OBJECT MODULE PLACED IN watch_dog.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE watch_dog.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 -----------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          /*************  本程序功能说明  **************
  15          
  16          用STC的MCU的IO方式驱动8位数码管。
  17          
  18          下载时, 选择时钟 24MHZ (用户可自行修改频率).
  19          
  20          显示效果为: 显示秒计数, 5秒后不喂狗, 等复位.
  21          
  22          ******************************************/
  23          #include    "reg51.h"
  24          #include    "intrins.h"
  25          
  26          #define MAIN_Fosc       24000000L   //定义主时钟
  27          
  28          
  29          typedef     unsigned char   u8;
  30          typedef     unsigned int    u16;
  31          typedef     unsigned long   u32;
  32          
  33          sfr WDT_CONTR = 0xC1;
  34          #define D_WDT_FLAG          (1<<7)
  35          #define D_EN_WDT            (1<<5)
  36          #define D_CLR_WDT           (1<<4)  //auto clear
  37          #define D_IDLE_WDT          (1<<3)  //WDT counter when Idle
  38          #define D_WDT_SCALE_2       0
  39          #define D_WDT_SCALE_4       1
  40          #define D_WDT_SCALE_8       2       //T=393216*N/fo
  41          #define D_WDT_SCALE_16      3
  42          #define D_WDT_SCALE_32      4
  43          #define D_WDT_SCALE_64      5
  44          #define D_WDT_SCALE_128     6
  45          #define D_WDT_SCALE_256     7
  46          
  47          sfr P4   = 0xC0;
  48          sfr P5   = 0xC8;
  49          sfr P6   = 0xE8;
  50          sfr P7   = 0xF8;
  51          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  52          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  53          sfr P0M1 = 0x93;
  54          sfr P0M0 = 0x94;
  55          sfr P2M1 = 0x95;
C51 COMPILER V9.59.0.0   WATCH_DOG                                                         06/12/2020 16:34:25 PAGE 2   

  56          sfr P2M0 = 0x96;
  57          sfr P3M1 = 0xB1;
  58          sfr P3M0 = 0xB2;
  59          sfr P4M1 = 0xB3;
  60          sfr P4M0 = 0xB4;
  61          sfr P5M1 = 0xC9;
  62          sfr P5M0 = 0xCA;
  63          sfr P6M1 = 0xCB;
  64          sfr P6M0 = 0xCC;
  65          sfr P7M1 = 0xE1;
  66          sfr P7M0 = 0xE2;
  67          
  68          sbit P00 = P0^0;
  69          sbit P01 = P0^1;
  70          sbit P02 = P0^2;
  71          sbit P03 = P0^3;
  72          sbit P04 = P0^4;
  73          sbit P05 = P0^5;
  74          sbit P06 = P0^6;
  75          sbit P07 = P0^7;
  76          sbit P10 = P1^0;
  77          sbit P11 = P1^1;
  78          sbit P12 = P1^2;
  79          sbit P13 = P1^3;
  80          sbit P14 = P1^4;
  81          sbit P15 = P1^5;
  82          sbit P16 = P1^6;
  83          sbit P17 = P1^7;
  84          sbit P20 = P2^0;
  85          sbit P21 = P2^1;
  86          sbit P22 = P2^2;
  87          sbit P23 = P2^3;
  88          sbit P24 = P2^4;
  89          sbit P25 = P2^5;
  90          sbit P26 = P2^6;
  91          sbit P27 = P2^7;
  92          sbit P30 = P3^0;
  93          sbit P31 = P3^1;
  94          sbit P32 = P3^2;
  95          sbit P33 = P3^3;
  96          sbit P34 = P3^4;
  97          sbit P35 = P3^5;
  98          sbit P36 = P3^6;
  99          sbit P37 = P3^7;
 100          sbit P40 = P4^0;
 101          sbit P41 = P4^1;
 102          sbit P42 = P4^2;
 103          sbit P43 = P4^3;
 104          sbit P44 = P4^4;
 105          sbit P45 = P4^5;
 106          sbit P46 = P4^6;
 107          sbit P47 = P4^7;
 108          sbit P50 = P5^0;
 109          sbit P51 = P5^1;
 110          sbit P52 = P5^2;
 111          sbit P53 = P5^3;
 112          sbit P54 = P5^4;
 113          sbit P55 = P5^5;
 114          sbit P56 = P5^6;
 115          sbit P57 = P5^7;
 116          
 117          
C51 COMPILER V9.59.0.0   WATCH_DOG                                                         06/12/2020 16:34:25 PAGE 3   

 118          #define DIS_DOT     0x20
 119          #define DIS_BLACK   0x10
 120          #define DIS_        0x11
 121          
 122          /****************************** 用户定义宏 ***********************************/
 123          
 124          #define     Timer0_Reload   (65536UL -(MAIN_Fosc / 1000))       //Timer 0 中断频率, 1000次/秒
 125          
 126          /*****************************************************************************/
 127          
 128          
 129          /*************  本地常量声明    **************/
 130          u8 code t_display[]={                       //标准字库
 131          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
 132              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
 133          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
 134              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
 135              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
 136          
 137          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};      //位码
 138          
 139          
 140          /*************  本地变量声明    **************/
 141          
 142          u8  LED8[8];        //显示缓冲
 143          u8  display_index;  //显示位索引
 144          
 145          u16 ms_cnt;
 146          u8  tes_cnt;    //测试用的计数变量
 147          
 148          void    delay_ms(u8 ms);
 149          void    DisplayScan(void);
 150          
 151          /********************** 主函数 ************************/
 152          void main(void)
 153          {
 154   1          u8  i;
 155   1          
 156   1          P0M1 = 0;   P0M0 = 0;   //设置为准双向口
 157   1          P1M1 = 0;   P1M0 = 0;   //设置为准双向口
 158   1          P2M1 = 0;   P2M0 = 0;   //设置为准双向口
 159   1          P3M1 = 0;   P3M0 = 0;   //设置为准双向口
 160   1          P4M1 = 0;   P4M0 = 0;   //设置为准双向口
 161   1          P5M1 = 0;   P5M0 = 0;   //设置为准双向口
 162   1          P6M1 = 0;   P6M0 = 0;   //设置为准双向口
 163   1          P7M1 = 0;   P7M0 = 0;   //设置为准双向口
 164   1      
 165   1          display_index = 0;
 166   1          for(i=0; i<8; i++)  LED8[i] = DIS_BLACK;    //全部消隐
 167   1          
 168   1          tes_cnt = 0;
 169   1          ms_cnt = 0;
 170   1          LED8[7] = ms_cnt;
 171   1      
 172   1          while(1)
 173   1          {
 174   2              delay_ms(1);    //延时1ms
 175   2              DisplayScan();
 176   2              if(tes_cnt <= 5)    //5秒后不喂狗, 将复位,
 177   2                  WDT_CONTR = (D_EN_WDT + D_CLR_WDT + D_WDT_SCALE_16);    // 喂狗
 178   2      
 179   2              if(++ms_cnt >= 1000)
C51 COMPILER V9.59.0.0   WATCH_DOG                                                         06/12/2020 16:34:25 PAGE 4   

 180   2              {
 181   3                  ms_cnt = 0;
 182   3                  tes_cnt++;
 183   3                  LED8[7] = tes_cnt;
 184   3              }
 185   2      
 186   2          }
 187   1      } 
 188          
 189          /**********************************************/
 190          
 191          //========================================================================
 192          // 函数: void  delay_ms(unsigned char ms)
 193          // 描述: 延时函数。
 194          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
 195          // 返回: none.
 196          // 版本: VER1.0
 197          // 日期: 2013-4-1
 198          // 备注: 
 199          //========================================================================
 200          void  delay_ms(u8 ms)
 201          {
 202   1           u16 i;
 203   1           do{
 204   2                i = MAIN_Fosc / 13000;
 205   2                while(--i)    ;   //14T per loop
 206   2           }while(--ms);
 207   1      }
 208          
 209          
 210          /********************** 显示扫描函数 ************************/
 211          void DisplayScan(void)
 212          {   
 213   1          P7 = ~T_COM[7-display_index];
 214   1          P6 = ~t_display[LED8[display_index]];
 215   1          if(++display_index >= 8)    display_index = 0;  //8位结束回0
 216   1      }
 217          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
