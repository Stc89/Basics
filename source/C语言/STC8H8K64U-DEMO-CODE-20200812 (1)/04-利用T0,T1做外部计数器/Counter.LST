C51 COMPILER V9.59.0.0   COUNTER                                                           08/11/2020 09:58:04 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE COUNTER
OBJECT MODULE PLACED IN Counter.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Counter.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          /*************  功能说明    **************
  14          
  15          用STC的MCU的IO方式驱动8位数码管。
  16          
  17          下载时, 选择时钟 24MHZ (用户可自行修改频率).
  18          
  19          显示效果为: 左边为T0(SW21)外部中断计数, 右边为T1(SW22)外部中断计数, 计数范围为0~255.
  20          
  21          由于按键是机械按键, 按下有抖动, 而本例程没有去抖动处理, 所以按一次有多个计数也是正常的.
  22          
  23          ******************************************/
  24          
  25          #include "reg51.h"
  26          
  27          #define     MAIN_Fosc       24000000UL  //定义主时钟
  28          
  29          typedef     unsigned char   u8;
  30          typedef     unsigned int    u16;
  31          typedef     unsigned long   u32;
  32          
  33          sfr P4   = 0xC0;
  34          sfr P5   = 0xC8;
  35          sfr P6   = 0xE8;
  36          sfr P7   = 0xF8;
  37          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  38          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  39          sfr P0M1 = 0x93;
  40          sfr P0M0 = 0x94;
  41          sfr P2M1 = 0x95;
  42          sfr P2M0 = 0x96;
  43          sfr P3M1 = 0xB1;
  44          sfr P3M0 = 0xB2;
  45          sfr P4M1 = 0xB3;
  46          sfr P4M0 = 0xB4;
  47          sfr P5M1 = 0xC9;
  48          sfr P5M0 = 0xCA;
  49          sfr P6M1 = 0xCB;
  50          sfr P6M0 = 0xCC;
  51          sfr P7M1 = 0xE1;
  52          sfr P7M0 = 0xE2;
  53          
  54          sbit P50 = P5^0;
  55          sbit P51 = P5^1;
C51 COMPILER V9.59.0.0   COUNTER                                                           08/11/2020 09:58:04 PAGE 2   

  56          
  57          sfr INT_CLKO = 0x8F;
  58          
  59          sfr P_SW2 = 0xba;
  60          #define P3PU        (*(unsigned char volatile xdata *)0xfe13)
  61          
  62          /****************************** 用户定义宏 ***********************************/
  63          #define T0_CT 0x04
  64          #define T1_CT 0x40
  65          
  66          #define DIS_DOT     0x20
  67          #define DIS_BLACK   0x10
  68          #define DIS_        0x11
  69          
  70          /***************************** 本地常量声明 **********************************/
  71          u8 code t_display[]={                       //标准字库
  72          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  73              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  74          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  75              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  76              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  77          
  78          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};      //位码
  79          
  80          /***************************** 本地变量声明 **********************************/
  81          u8  LED8[8];        //显示缓冲
  82          u8  display_index;  //显示位索引
  83          
  84          u8  T0_cnt, T1_cnt; //测试用的计数变量
  85          
  86          void delay_ms(u8 ms);
  87          void DisplayScan(void);
  88          
  89          //========================================================================
  90          // 函数: void timer0_int (void) interrupt TIMER0_VECTOR
  91          // 描述:  timer0中断函数.
  92          // 参数: none.
  93          // 返回: none.
  94          // 版本: V1.0, 2015-1-12
  95          //========================================================================
  96          void TM0_Isr() interrupt 1
  97          {
  98   1          P50 = !P50;  //测试端口
  99   1          T0_cnt++;    //计数+1
 100   1      }
 101          
 102          //========================================================================
 103          // 函数: void timer1_int (void) interrupt TIMER1_VECTOR
 104          // 描述:  timer1中断函数.
 105          // 参数: none.
 106          // 返回: none.
 107          // 版本: V1.0, 2015-1-12
 108          //========================================================================
 109          void TM1_Isr (void) interrupt 3
 110          {
 111   1          P51 = !P51;  //测试端口
 112   1          T1_cnt++;    //计数+1
 113   1      }
 114          
 115          //========================================================================
 116          // 函数: void main(void)
 117          // 描述: 主函数.
C51 COMPILER V9.59.0.0   COUNTER                                                           08/11/2020 09:58:04 PAGE 3   

 118          // 参数: none.
 119          // 返回: none.
 120          // 版本: V1.0, 2015-1-12
 121          //========================================================================
 122          void main()
 123          {
 124   1          u8 i;
 125   1          
 126   1          P0M1 = 0;   P0M0 = 0;   //设置为准双向口
 127   1          P1M1 = 0;   P1M0 = 0;   //设置为准双向口
 128   1          P2M1 = 0;   P2M0 = 0;   //设置为准双向口
 129   1          P4M1 = 0;   P4M0 = 0;   //设置为准双向口
 130   1          P5M1 = 0;   P5M0 = 0;   //设置为准双向口
 131   1          P6M1 = 0;   P6M0 = 0;   //设置为准双向口
 132   1          P7M1 = 0;   P7M0 = 0;   //设置为准双向口
 133   1          P3M1 = 0x30;   P3M0 = 0;//P3.4,P3.5设置为输入口
 134   1      
 135   1          P_SW2 |= 0x80;
 136   1          P3PU = 0x30;            //P3.4,P3.5使能内部4.1K上拉电阻
 137   1          P_SW2 &= 0x7f;
 138   1      
 139   1          TMOD = 0;
 140   1          TMOD |= T0_CT;          //使能T0外部计数模式
 141   1          TMOD |= T1_CT;          //使能T1外部计数模式
 142   1          TL0 = 0xff;
 143   1          TH0 = 0xff;
 144   1          TL1 = 0xff;
 145   1          TH1 = 0xff;
 146   1          TR0 = 1;                //启动定时器T0
 147   1          TR1 = 1;                //启动定时器T1
 148   1          ET0 = 1;                //使能定时器中断T0
 149   1          ET1 = 1;                //使能定时器中断T1
 150   1      
 151   1          INT_CLKO &= ~0x03;      //T0,T1不输出时钟
 152   1      
 153   1          display_index = 0;
 154   1          for(i=0; i<8; i++)  LED8[i] = DIS_BLACK;    //全部消隐
 155   1          T0_cnt = 0;
 156   1          T1_cnt = 0;
 157   1      
 158   1          EA = 1;
 159   1      
 160   1          while(1)
 161   1          {
 162   2              delay_ms(1);    //延时1ms
 163   2              DisplayScan();
 164   2          }
 165   1      }
 166          
 167          //========================================================================
 168          // 函数: void  delay_ms(unsigned char ms)
 169          // 描述: 延时函数。
 170          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
 171          // 返回: none.
 172          // 版本: VER1.0
 173          // 日期: 2013-4-1
 174          // 备注: 
 175          //========================================================================
 176          void  delay_ms(u8 ms)
 177          {
 178   1           u16 i;
 179   1           do{
C51 COMPILER V9.59.0.0   COUNTER                                                           08/11/2020 09:58:04 PAGE 4   

 180   2                i = MAIN_Fosc / 13000;
 181   2                while(--i)    ;   //14T per loop
 182   2           }while(--ms);
 183   1      }
 184          
 185          /********************** 显示扫描函数 ************************/
 186          void DisplayScan(void)
 187          {   
 188   1          P7 = ~T_COM[7-display_index];
 189   1          P6 = ~t_display[LED8[display_index]];
 190   1          if(++display_index >= 8)
 191   1          {
 192   2              display_index = 0;  //8位结束回0
 193   2              LED8[0] = T0_cnt / 100;
 194   2              LED8[1] = (T0_cnt % 100)/10;
 195   2              LED8[2] = T0_cnt % 10;
 196   2              LED8[3] = DIS_BLACK;
 197   2              LED8[4] = DIS_BLACK;
 198   2              LED8[5] = T1_cnt / 100;
 199   2              LED8[6] = (T1_cnt % 100)/10;
 200   2              LED8[7] = T1_cnt % 10;
 201   2          }
 202   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
